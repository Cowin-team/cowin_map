{"version":3,"sources":["webpack://the_cowin_map/./assets/js/src/city.js","webpack://the_cowin_map/./assets/js/src/locations/covidBedLocation.js","webpack://the_cowin_map/./assets/js/src/markers/covidBedMarker.js","webpack://the_cowin_map/./assets/js/src/locations/oxygenSupplyLocation.js","webpack://the_cowin_map/./assets/js/src/markers/oxygenSupplyMarker.js","webpack://the_cowin_map/./assets/js/src/entry/index.js","webpack://the_cowin_map/./assets/js/src/cowinMap.js","webpack://the_cowin_map/./assets/js/src/mapFilters.js"],"names":["sheetsApiKey","constructor","name","spreadsheetIds","afterFetchCallback","this","covidBedLocations","covidBedMarkers","fetchCovidBedData","oxygenSupplyLocations","oxygenSupplyMarkers","undefined","oxygenSupply","fetchOxygemSupplyData","sheetUrl","covidBeds","fetch","then","response","json","data","values","forEach","dataRow","covidBedLocation","title","url","latitude","parseFloat","longitude","isNaN","Boolean","url_location","split","covidbed","oxybed","icu","venti","updatedAt","position","lat","lng","hasCovidBeds","hasAttribute","hasOxygenBeds","hasICUs","hasVentilators","attr","push","location","marker","google","maps","Marker","map","descriptionHtml","setMap","oxygenSupplyLocation","hasRefilling","parseYesOrNo","hasCylinders","hasCans","hasConcentrator","additionalInfo","value","toLowerCase","trim","icon","console","log","window","initialiseMap","cowinMap","markerInfoWindow","InfoWindow","content","cowinMapMarkers","bounds","LatLngBounds","mapFilters","onChangeCallback","state","shouldHaveCovidBeds","shouldHaveOxygenBeds","shouldHaveICUs","shouldHaveVentilators","setEventListeners","that","document","querySelectorAll","filter_chkbx","addEventListener","event","filterChanged","target","checkedCheckboxElem","filterName","dataset","checked","shouldShowLocation","newFiltersState","plotAllCowinMapMarkers","Map","getElementById","zoom","center","LatLng","navigator","geolocation","getCurrentPosition","pos","coords","setCenter","setupAndPlotCowinMapMarker","cowinMapMarker","addListener","setContent","open","plotCowinMapMarker","extend","afterCityDataFetchCallback","City"],"mappings":"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","file":"index.js","sourcesContent":["const sheetsApiKey = \"AIzaSyClGVndCtMIDvZ7GdE1fO5OPQL5XdtMvVM\";\nimport CovidBedLocation from './locations/covidBedLocation';\nimport CovidBedMarker from './markers/covidBedMarker';\n\nimport OxygenSupplyLocation from './locations/oxygenSupplyLocation';\nimport OxygenSupplyMarker from './markers/oxygenSupplyMarker';\n\nclass City {\n  constructor(name, spreadsheetIds, afterFetchCallback) {\n    this.name               = name;\n    this.spreadsheetIds     = spreadsheetIds;\n    this.afterFetchCallback = afterFetchCallback;\n\n    this.covidBedLocations  = [];\n    this.covidBedMarkers    = [];\n    this.fetchCovidBedData();\n\n    this.oxygenSupplyLocations  = [];\n    this.oxygenSupplyMarkers    = [];\n    if (spreadsheetIds.oxygenSupply !== undefined) {\n      this.fetchOxygemSupplyData();\n    }\n  }\n\n  fetchCovidBedData() {\n    let sheetUrl = \"https://sheets.googleapis.com/v4/spreadsheets/\"+\n      `${this.spreadsheetIds.covidBeds}/values/Sheet1!A2:Q?key=${sheetsApiKey}`\n\n    fetch(sheetUrl)\n      .then(response => response.json())\n      .then(data => {\n        data.values.forEach((dataRow) => {\n          let covidBedLocation = new CovidBedLocation(dataRow);\n          this.covidBedLocations.push(covidBedLocation);\n          this.covidBedMarkers.push(new CovidBedMarker(covidBedLocation));\n        });\n\n        this.afterFetchCallback(this.covidBedMarkers);\n      });\n  }\n\n  fetchOxygemSupplyData() {\n    let sheetUrl = \"https://sheets.googleapis.com/v4/spreadsheets/\"+\n      `${this.spreadsheetIds.oxygenSupply}/values/Sheet1!A2:Q?key=${sheetsApiKey}`\n\n    fetch(sheetUrl)\n      .then(response => response.json())\n      .then(data => {\n        data.values.forEach((dataRow) => {\n          let oxygenSupplyLocation = new OxygenSupplyLocation(dataRow);\n          this.oxygenSupplyLocations.push(oxygenSupplyLocation);\n          this.oxygenSupplyMarkers.push(new OxygenSupplyMarker(oxygenSupplyLocation));\n          console.log(oxygenSupplyLocation);\n        });\n\n        this.afterFetchCallback(this.oxygenSupplyMarkers);\n      });\n  }\n}\n\nexport default City;\n","class CovidBedLocation {\n  constructor(dataRow) {\n    this.title     = dataRow[0];\n    this.url       = dataRow[4];\n    this.latitude  = parseFloat(dataRow[2]);\n    this.longitude = parseFloat(dataRow[3]);\n    if (isNaN(this.latitude) && isNaN(this.longitude)  && Boolean(this.url)){\n      var url_location = this.url.split('@')[1].split('z')[0].split(',');\n      this.latitude = parseFloat(url_location[0]);\n      this.longitude = parseFloat(url_location[1]);\n    }\n    this.covidbed  = (dataRow[5] === undefined ? \"N/A\" : dataRow[5]);\n    this.oxybed    = (dataRow[6] === undefined ? \"N/A\" : dataRow[6]);\n    this.icu       = (dataRow[7] === undefined ? \"N/A\" : dataRow[7]);\n    this.venti     = (dataRow[8] === undefined ? \"N/A\" : dataRow[8]);\n    this.updatedAt = dataRow[9];\n\n    this.position       = { lat: this.latitude, lng: this.longitude };\n    this.hasCovidBeds   = this.hasAttribute(\"covidbed\");\n    this.hasOxygenBeds  = this.hasAttribute(\"oxybed\");\n    this.hasICUs        = this.hasAttribute(\"icu\");\n    this.hasVentilators = this.hasAttribute(\"venti\");\n  }\n\n  hasAttribute(attr) {\n    if (this[attr] === undefined || this[attr] === \"\") {\n      return false;\n    }\n    if (isNaN(this[attr])) { return false; }\n    if (parseFloat(this[attr]) < 1) { return false; }\n\n    return true;\n  }\n}\n\nexport default CovidBedLocation;\n","class CovidBedMarker {\n  constructor(location) {\n    this.location = location;\n    this.marker = new google.maps.Marker({\n      position: location.position,\n      map: null,\n      title: location.title\n    });\n    this.position = this.marker.position;\n\n    this.descriptionHtml = `\n      <div class=\"content\">\n        <h5 class=\"title is-5 mb-0\">\n         ${(location.url === undefined) ? location.title : ('<a href=\"' + location.url +'\">' + location.title + '</a>')}\n        </h5>\n        <p class=\"is-size-7 mt-1\">Updated at: ${location.updatedAt}</p>\n        <table class=\"table has-text-left is-striped is-narrow is-hoverable\">\n          <tr><th>COVID Beds: </th><td>${location.covidbed}</td></tr>\n          <tr><th>Oxygen Beds: </th><td>${location.oxybed}</td></tr>\n          <tr><th>ICUs: </th><td>${location.icu}</td></tr>\n          <tr><th>Ventilators: </th><td>${location.venti}</td></tr>\n        </table>\n      </div>\n    `\n  }\n\n  setMap(map) {\n    this.marker.setMap(map);\n  }\n}\n\nexport default CovidBedMarker;\n","class OxygenSupplyLocation {\n  constructor(dataRow) {\n    this.title           = dataRow[0];\n    this.latitude        = parseFloat(dataRow[2]);\n    this.longitude       = parseFloat(dataRow[3]);\n    this.url             = dataRow[4];\n    this.hasRefilling    = this.parseYesOrNo(dataRow[5]);\n    this.hasCylinders    = this.parseYesOrNo(dataRow[6]);\n    this.hasCans         = this.parseYesOrNo(dataRow[7]);\n    this.hasConcentrator = this.parseYesOrNo(dataRow[8]);\n    this.additionalInfo  = dataRow[9]\n    this.updatedAt       = dataRow[10];\n\n    this.position        = { lat: this.latitude, lng: this.longitude };\n  }\n\n  parseYesOrNo(value) {\n    value = value.toLowerCase().trim();\n    if (value == \"yes\") {\n      return true;\n    } else if (value == \"no\") {\n      return false\n    }\n\n    return undefined;\n  }\n}\n\nexport default OxygenSupplyLocation;\n","class OxygenSupplyMarker {\n  constructor(location) {\n    this.location = location;\n    this.marker = new google.maps.Marker({\n      position: location.position,\n      map: null,\n      title: location.title,\n      icon: \"/assets/images/oxygen.png\"\n    });\n    this.position = this.marker.position;\n\n    this.descriptionHtml = `\n      <div class=\"content\">\n        <h5 class=\"title is-5 mb-0\">\n         ${(location.url === undefined) ? location.title : ('<a href=\"' + location.url +'\">' + location.title + '</a>')}\n        </h5>\n        <p class=\"is-size-7 mt-1\">Updated at: ${location.updatedAt}</p>\n        <table class=\"table has-text-left is-striped is-narrow is-hoverable\">\n          <tr><th>Oxygen Refilling</th><td>${location.hasRefilling ? \"Yes\" : \"No\" }</td></tr>\n          <tr><th>Oxygen Cylinders</th><td>${location.hasCylinders ? \"Yes\" : \"No\" }</td></tr>\n          <tr><th>Oxygen Cans</th><td>${location.hasCans ? \"Yes\" : \"No\" }</td></tr>\n          <tr><th>Oxygen Concentrator</th><td>${location.hasConcentrator ? \"Yes\" : \"No\" }</td></tr>\n        </table>\n        <p>\n        <strong>\n          Additional info:\n        </strong>\n        ${location.additionalInfo}\n        </p>\n      </div>\n    `\n  }\n\n  setMap(map) {\n    this.marker.setMap(map);\n  }\n}\n\nexport default OxygenSupplyMarker;\n","import City from '../city'\nimport CowinMap from '../cowinMap'\n\nfunction initialiseMap() {\n  let cowinMap = new CowinMap();\n\n  let afterCityDataFetchCallback = (cowinMapMarkers) => {\n    cowinMapMarkers.forEach((cowinMapMarker) => {\n      cowinMap.setupAndPlotCowinMapMarker(cowinMapMarker);\n    });\n    cowinMap.plotAllCowinMapMarkers();\n  };\n\n  let ariyalurCity = new City(\n    \"Ariyalur\",\n    {\n      covidBeds: \"12Dmi6ISJQUDIkhbRZ_py4n_IQHJRN1pnuBEOA7tv5ko\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let chengalpattuCity = new City(\n    \"Chengalpattu\",\n    {\n      covidBeds: \"1OlpEEumoFhNDgnFxe6WIe78A8SlhSYHVQorVbOK1Uvo\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let chennaiCity = new City(\n    \"Chennai\",\n    {\n      covidBeds: \"1YV3DWGxsvlTp0-vaw8f09AajQ5cl3MovFvWVVDtkbOc\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let coimbatorCity = new City(\n    \"coimbatore\",\n    {\n      covidBeds: \"1WW1Lu7S8zP85Qzv-Pn7gp_KUxPJZzvrXnGoWOkwcdbw\",\n      oxygenSupply: \"1Ry3y1hx1iHeuF17YmWtzfaDQdhx5zRr6lSLrzBW_TU0\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let cuddaloreCity = new City(\n    \"Cuddalore\",\n    {\n      covidBeds: \"1EH9C7FkWud1jjzj-7q7xQwPd4WpoMccVVtWl0oqq98U\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let dharmapuriCity = new City(\n    \"Dharmapuri\",\n    {\n      covidBeds: \"1C1FJzyXNVa5-j0Q62mpjJFD1KRCBcqnBH1eOLAXYa70\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let dindigulCity = new City(\n    \"Dindigul\",\n    {\n      covidBeds: \"1RPZhwn_Aw-g7o2pBgfe4r0MJe-1UjpQxGkWjzMsQTHY\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let erodeCity = new City(\n    \"Erode\",\n    {\n      covidBeds: \"16X-7DT_U_XLFYusN9z_tFypRre1suvJ8wkTHeb1YtCQ\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let kallakurichiCity = new City(\n    \"Kallakurichi\",\n    {\n      covidBeds: \"18eJ4qiH1B906qdzaP58SIziTClCB0x_FpZxcl9oYz14\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let kancheepuramCity = new City(\n    \"Kancheepuram\",\n    {\n      covidBeds: \"1JFeF1AtpCxRKy6Wb1Mfxq0wCT6M6ULFBvbGwBkMTzjc\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let kanyakumariCity = new City(\n    \"Kanyakumari\",\n    {\n      covidBeds: \"1mmnz6UDlqkm3EqU6UdW7nqOAmyeZcSH14fftnO1rqh8\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let karurCity = new City(\n    \"Karur\",\n    {\n      covidBeds: \"1yeSYSu9FJWQtxh5sfCBGfGJD62BzBmg4EgAefsaYbbg\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let krishnagiri = new City(\n    \"Krishnagiri\",\n    {\n      covidBeds: \"1bkBE2k5zB7FlhsFHtpdzNKF7EKON_vKP7mjdCAZLt9Y\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let maduraiCity = new City(\n    \"Madurai\",\n    {\n      covidBeds: \"1Dr7DYS6GKe5avhHcwhHMB6Z9DTFSj20eEgLvfBlQJSo\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let nagapattinamCity = new City(\n    \"Nagapattinam\",\n    {\n      covidBeds: \"13O7rh6C3XCR3lSkujGFh6iEdMu0sxnb14sqZEXfrxPw\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let namakkalCity = new City(\n    \"Namakkal\",\n    {\n      covidBeds: \"1RP_dDLl4a49_hq-Mp39WWiZiNXKOq5wUBkq1iw7hSFY\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let nilgirisCity = new City(\n    \"Nilgiris\",\n    {\n      covidBeds: \"1CUH-nT9LjD3aIt502segS9CPdz60oq9JdRy4ZvuXETc\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let preambalurCity = new City(\n    \"Preambalur\",\n    {\n      covidBeds: \"1nWkVDXRxuWI6dAYLtDo4eNvSW8FggvNuHCoL27B8qCw\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let pudukottaiCity = new City(\n    \"Pudukottai\",\n    {\n      covidBeds: \"1od8JhGoSmn0r66PQCxV4j9oJoJ-RJNbCginMBtnV_60\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let ramanathapuramCity = new City(\n    \"Ramanathapuram\",\n    {\n      covidBeds: \"1szYIqEjXO9DPZXH6z8TbIrlKjLoPT0V5MwHiZkXb0ag\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let ranipetCity = new City(\n    \"Ranipet\",\n    {\n      covidBeds: \"1c9xo2XBRXjr6tU4AlZWh2VzSGPPJsOKTZC_vsX5tJgM\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let salemCity = new City(\n    \"Salem\",\n    {\n      covidBeds: \"1GlNu4jyK_nkI2KwEBe9Wc6qgW1bCxbrH9v8cUJDJWrs\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let sivagangaiCity = new City(\n    \"Sivagangai\",\n    {\n      covidBeds: \"1wGN_t4TW70RNvNhg259Tb8Cc5bli73vrMIDuGH8zFhM\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let tenkasiCity = new City(\n    \"Tenkasi\",\n    {\n      covidBeds: \"1Rjn8tzK_DuKzbGE3FRHAK9klpbsk7nasfDi8hWYG_Xo\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thanjavurCity = new City(\n    \"Thanjavur\",\n    {\n      covidBeds: \"12wJXWn2ropifcuAEj6KZxyNkkJzZBYjjG7r-5WVjgT4\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let theniCity = new City(\n    \"Theni\",\n    {\n      covidBeds: \"1xgvC0LSHJ4gedshTMEjlqOqM7OIlRFmlgD5z_CdL8jQ\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thirupathurCity = new City(\n    \"Thirupathur\",\n    {\n      covidBeds: \"1x8_36yw3M51tdYHUAj-BaQfZCqFSgkS2A666XPxO3Jo\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thiruvarurCity = new City(\n    \"Thiruvarur\",\n    {\n      covidBeds: \"1GUsyRy-wWrQ0VWRUe_V2ZHhKIz9z_K3Q6ZkPtlICpSk\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thoothukudiCity = new City(\n    \"Thoothukudi\",\n    {\n      covidBeds: \"1CliAXv8Ws8tmu1yGzFo5TgOYVdUrPW9Et7KU-fvm-3k\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thirunelveliCity = new City(\n    \"Thirunelveli\",\n    {\n      covidBeds: \"124dWtrpcunekPx-AGyoNDD6cgFKEYFc63BYXCadl4Kw\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let tiripurCity = new City(\n    \"Tirupur\",\n    {\n      covidBeds: \"1T5fUP5nhCctC2bpNWeO4Yg2UYrewbTxrGh58c2zJePU\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thiruvallurCity = new City(\n    \"Thiruvallur\",\n    {\n      covidBeds: \"1v0Qiew7dauoum8E_3p6GdL13TL0HmCT_Ruz5_7EdMGQ\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let thiruvannamalaiCity = new City(\n    \"Thiruvannamalai\",\n    {\n      covidBeds: \"1L9Mll_3sD709TOsYXRr8sxZgbAqqKNtjtWLkdqqR9JE\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let velloreCity = new City(\n    \"Vellore\",\n    {\n      covidBeds: \"1NFfB_ApMAmU9t6LHV78Ohh4wnda4kSlLgMA394koB0c\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let villupuramCity = new City(\n    \"Villupuram\",\n    {\n      covidBeds: \"1S-SB3KLbKyyt_XWQDI0qnwIf2kiKrH5PlDe_NgiumJA\"\n    },\n    afterCityDataFetchCallback\n  );\n\n  let virudhunagarCity = new City(\n    \"Virudhunagar\",\n    {\n      covidBeds: \"1NIECJ0FGqMSJ5yY72gfk-C-F3K8EhnhJGMC0tQs8CZ0\"\n    },\n    afterCityDataFetchCallback\n  );\n}\n\n\nwindow.initialiseMap = initialiseMap;\n","import MapFilters from './mapFilters';\n\nclass CowinMap {\n  constructor() {\n    this.map = null;\n    this.initialiseMap();\n    this.markerInfoWindow = new google.maps.InfoWindow({ content: \"\" });\n    this.cowinMapMarkers = [];\n    this.bounds = new google.maps.LatLngBounds();\n    this.mapFilters = new MapFilters((newFiltersState) => {\n      this.plotAllCowinMapMarkers();\n    });\n  }\n\n  initialiseMap() {\n    // Center on (0, 0). Map center and zoom will reconfigure later (fitbounds method)\n    this.map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 10,\n      center: new google.maps.LatLng(11.0117016,76.8971953)\n    });\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          this.map.setCenter(pos);\n        },\n        () => {\n          // Center on Coimbatore\n          this.map.setCenter(new google.maps.LatLng(11.0117016,76.8971953));\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      // Center on Coimbatore\n      this.map.setCenter(new google.maps.LatLng(11.0117016,76.8971953));\n    }\n  }\n\n  setupAndPlotCowinMapMarker(cowinMapMarker) {\n    google.maps.event.addListener(cowinMapMarker.marker, 'click', () => {\n      this.markerInfoWindow.setContent(cowinMapMarker.descriptionHtml);\n      this.markerInfoWindow.open(this.map, cowinMapMarker.marker);\n    });\n    this.cowinMapMarkers.push(cowinMapMarker);\n  };\n\n  plotCowinMapMarker(cowinMapMarker) {\n    if (this.mapFilters.shouldShowLocation(cowinMapMarker.location)) {\n      cowinMapMarker.setMap(this.map);\n      if (!isNaN(cowinMapMarker.location.latitude) && !isNaN(cowinMapMarker.location.longitude)) {\n        this.bounds.extend(cowinMapMarker.position);\n      }\n    } else {\n      cowinMapMarker.setMap(null);\n    }\n  }\n\n  plotAllCowinMapMarkers() {\n    this.cowinMapMarkers.forEach((cowinMapMarker) => {\n      this.plotCowinMapMarker(cowinMapMarker);\n    });\n\n    // this.map.fitBounds(this.bounds);\n  }\n}\nexport default CowinMap;\n","class MapFilters {\n  constructor(onChangeCallback) {\n    this.state = {\n      shouldHaveCovidBeds: false,\n      shouldHaveOxygenBeds: false,\n      shouldHaveICUs: false,\n      shouldHaveVentilators: false\n    };\n    this.setEventListeners();\n    this.onChangeCallback = onChangeCallback;\n  }\n\n  setEventListeners() {\n    let that = this;\n    document.querySelectorAll(\".filters_form input\").forEach(function(filter_chkbx) {\n      filter_chkbx.addEventListener(\"change\", (event) => { that.filterChanged(event.target) });\n    });\n  }\n\n  filterChanged(checkedCheckboxElem) {\n    let filterName = checkedCheckboxElem.dataset.filterName;\n    if (filterName == \"show_covid_beds\")  {\n      this.state.shouldHaveCovidBeds = checkedCheckboxElem.checked;\n    } else if (filterName == \"show_oxygen_beds\")  {\n      this.state.shouldHaveOxygenBeds = checkedCheckboxElem.checked;\n    } else if (filterName == \"show_icus\")  {\n      this.state.shouldHaveICUs = checkedCheckboxElem.checked;\n    } else if (filterName == \"show_ventilators\")  {\n      this.state.shouldHaveVentilators = checkedCheckboxElem.checked;\n    }\n\n    this.onChangeCallback(this.state);\n  }\n\n  shouldShowLocation(location) {\n    if ((this.state.shouldHaveCovidBeds && !location.hasCovidBeds) ||\n      (this.state.shouldHaveOxygenBeds && !location.hasOxygenBeds) ||\n      (this.state.shouldHaveICUs && !location.hasICUs) ||\n      (this.state.shouldHaveVentilators && !location.hasVentilators)) {\n\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default MapFilters;\n"],"sourceRoot":""}