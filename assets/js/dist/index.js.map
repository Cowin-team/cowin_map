{"version":3,"sources":["webpack://the_cowin_map/./assets/js/src/city.js","webpack://the_cowin_map/./assets/js/src/locations/covidBedLocation.js","webpack://the_cowin_map/./assets/js/src/markers/covidBedMarker.js","webpack://the_cowin_map/./assets/js/src/locations/oxygenSupplyLocation.js","webpack://the_cowin_map/./assets/js/src/markers/oxygenSupplyMarker.js","webpack://the_cowin_map/./assets/js/src/entry/index.js","webpack://the_cowin_map/./assets/js/src/cowinMap.js","webpack://the_cowin_map/./assets/js/src/mapFilters.js"],"names":["sheetsApiKey","constructor","name","spreadsheetIds","afterFetchCallback","this","covidBedLocations","covidBedMarkers","fetchCovidBedData","oxygenSupplyLocations","oxygenSupplyMarkers","undefined","oxygenSupply","fetchOxygemSupplyData","sheetUrl","covidBeds","fetch","then","response","json","data","values","forEach","dataRow","covidBedLocation","title","latitude","parseFloat","longitude","url","covidbed","oxybed","icu","venti","updatedAt","position","lat","lng","hasCovidBeds","hasAttribute","hasOxygenBeds","hasICUs","hasVentilators","attr","isNaN","push","location","marker","google","maps","Marker","map","descriptionHtml","setMap","oxygenSupplyLocation","hasRefilling","parseYesOrNo","hasCylinders","hasCans","hasConcentrator","additionalInfo","value","toLowerCase","trim","icon","console","log","window","initialiseMap","cowinMap","markerInfoWindow","InfoWindow","content","cowinMapMarkers","bounds","LatLngBounds","mapFilters","onChangeCallback","state","shouldHaveCovidBeds","shouldHaveOxygenBeds","shouldHaveICUs","shouldHaveVentilators","setEventListeners","that","document","querySelectorAll","filter_chkbx","addEventListener","event","filterChanged","target","checkedCheckboxElem","filterName","dataset","checked","shouldShowLocation","newFiltersState","plotAllCowinMapMarkers","Map","getElementById","zoom","center","LatLng","setupAndPlotCowinMapMarker","cowinMapMarker","addListener","setContent","open","plotCowinMapMarker","extend","fitBounds","afterCityDataFetchCallback","City"],"mappings":"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","file":"index.js","sourcesContent":["const sheetsApiKey = \"AIzaSyClGVndCtMIDvZ7GdE1fO5OPQL5XdtMvVM\";\r\nimport CovidBedLocation from './locations/covidBedLocation';\r\nimport CovidBedMarker from './markers/covidBedMarker';\r\n\r\nimport OxygenSupplyLocation from './locations/oxygenSupplyLocation';\r\nimport OxygenSupplyMarker from './markers/oxygenSupplyMarker';\r\n\r\nclass City {\r\n  constructor(name, spreadsheetIds, afterFetchCallback) {\r\n    this.name               = name;\r\n    this.spreadsheetIds     = spreadsheetIds;\r\n    this.afterFetchCallback = afterFetchCallback;\r\n\r\n    this.covidBedLocations  = [];\r\n    this.covidBedMarkers    = [];\r\n    this.fetchCovidBedData();\r\n\r\n    this.oxygenSupplyLocations  = [];\r\n    this.oxygenSupplyMarkers    = [];\r\n    if (spreadsheetIds.oxygenSupply !== undefined) {\r\n      this.fetchOxygemSupplyData();\r\n    }\r\n  }\r\n\r\n  fetchCovidBedData() {\r\n    let sheetUrl = \"https://sheets.googleapis.com/v4/spreadsheets/\"+\r\n      `${this.spreadsheetIds.covidBeds}/values/Sheet1!A2:Q?key=${sheetsApiKey}`\r\n\r\n    fetch(sheetUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.values.forEach((dataRow) => {\r\n          let covidBedLocation = new CovidBedLocation(dataRow);\r\n          this.covidBedLocations.push(covidBedLocation);\r\n          this.covidBedMarkers.push(new CovidBedMarker(covidBedLocation));\r\n        });\r\n\r\n        this.afterFetchCallback(this.covidBedMarkers);\r\n      });\r\n  }\r\n\r\n  fetchOxygemSupplyData() {\r\n    let sheetUrl = \"https://sheets.googleapis.com/v4/spreadsheets/\"+\r\n      `${this.spreadsheetIds.oxygenSupply}/values/Sheet1!A2:Q?key=${sheetsApiKey}`\r\n\r\n    fetch(sheetUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.values.forEach((dataRow) => {\r\n          let oxygenSupplyLocation = new OxygenSupplyLocation(dataRow);\r\n          this.oxygenSupplyLocations.push(oxygenSupplyLocation);\r\n          this.oxygenSupplyMarkers.push(new OxygenSupplyMarker(oxygenSupplyLocation));\r\n          console.log(oxygenSupplyLocation);\r\n        });\r\n\r\n        this.afterFetchCallback(this.oxygenSupplyMarkers);\r\n      });\r\n  }\r\n}\r\n\r\nexport default City;\r\n","class CovidBedLocation {\r\n  constructor(dataRow) {\r\n    this.title     = dataRow[0];\r\n    this.latitude  = parseFloat(dataRow[2]);\r\n    this.longitude = parseFloat(dataRow[3]);\r\n    this.url       = dataRow[4];\r\n    this.covidbed  = (dataRow[5] === undefined ? \"N/A\" : dataRow[5]);\r\n    this.oxybed    = (dataRow[6] === undefined ? \"N/A\" : dataRow[6]);\r\n    this.icu       = (dataRow[7] === undefined ? \"N/A\" : dataRow[7]);\r\n    this.venti     = (dataRow[8] === undefined ? \"N/A\" : dataRow[8]);\r\n    this.updatedAt = dataRow[9];\r\n\r\n    this.position       = { lat: this.latitude, lng: this.longitude };\r\n    this.hasCovidBeds   = this.hasAttribute(\"covidbed\");\r\n    this.hasOxygenBeds  = this.hasAttribute(\"oxybed\");\r\n    this.hasICUs        = this.hasAttribute(\"icu\");\r\n    this.hasVentilators = this.hasAttribute(\"venti\");\r\n  }\r\n\r\n  hasAttribute(attr) {\r\n    if (this[attr] === undefined || this[attr] === \"\") {\r\n      return false;\r\n    }\r\n    if (isNaN(this[attr])) { return false; }\r\n    if (parseFloat(this[attr]) < 1) { return false; }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default CovidBedLocation;\r\n","class CovidBedMarker {\r\n  constructor(location) {\r\n    this.location = location;\r\n    this.marker = new google.maps.Marker({\r\n      position: location.position,\r\n      map: null,\r\n      title: location.title\r\n    });\r\n    this.position = this.marker.position;\r\n\r\n    this.descriptionHtml = `\r\n      <div class=\"content\">\r\n        <h5 class=\"title is-5 mb-0\">\r\n         ${(location.url === undefined) ? location.title : ('<a href=\"' + location.url +'\">' + location.title + '</a>')}\r\n        </h5>\r\n        <p class=\"is-size-7 mt-1\">Updated at: ${location.updatedAt}</p>\r\n        <table class=\"table has-text-left is-striped is-narrow is-hoverable\">\r\n          <tr><th>COVID Beds: </th><td>${location.covidbed}</td></tr>\r\n          <tr><th>Oxygen Beds: </th><td>${location.oxybed}</td></tr>\r\n          <tr><th>ICUs: </th><td>${location.icu}</td></tr>\r\n          <tr><th>Ventilators: </th><td>${location.venti}</td></tr>\r\n        </table>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  setMap(map) {\r\n    this.marker.setMap(map);\r\n  }\r\n}\r\n\r\nexport default CovidBedMarker;\r\n","class OxygenSupplyLocation {\r\n  constructor(dataRow) {\r\n    this.title           = dataRow[0];\r\n    this.latitude        = parseFloat(dataRow[2]);\r\n    this.longitude       = parseFloat(dataRow[3]);\r\n    this.url             = dataRow[4];\r\n    this.hasRefilling    = this.parseYesOrNo(dataRow[5]);\r\n    this.hasCylinders    = this.parseYesOrNo(dataRow[6]);\r\n    this.hasCans         = this.parseYesOrNo(dataRow[7]);\r\n    this.hasConcentrator = this.parseYesOrNo(dataRow[8]);\r\n    this.additionalInfo  = dataRow[9]\r\n    this.updatedAt       = dataRow[10];\r\n\r\n    this.position        = { lat: this.latitude, lng: this.longitude };\r\n  }\r\n\r\n  parseYesOrNo(value) {\r\n    value = value.toLowerCase().trim();\r\n    if (value == \"yes\") {\r\n      return true;\r\n    } else if (value == \"no\") {\r\n      return false\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default OxygenSupplyLocation;\r\n","class OxygenSupplyMarker {\r\n  constructor(location) {\r\n    this.location = location;\r\n    this.marker = new google.maps.Marker({\r\n      position: location.position,\r\n      map: null,\r\n      title: location.title,\r\n      icon: \"/assets/images/oxygen.png\"\r\n    });\r\n    this.position = this.marker.position;\r\n\r\n    this.descriptionHtml = `\r\n      <div class=\"content\">\r\n        <h5 class=\"title is-5 mb-0\">\r\n         ${(location.url === undefined) ? location.title : ('<a href=\"' + location.url +'\">' + location.title + '</a>')}\r\n        </h5>\r\n        <p class=\"is-size-7 mt-1\">Updated at: ${location.updatedAt}</p>\r\n        <table class=\"table has-text-left is-striped is-narrow is-hoverable\">\r\n          <tr><th>Oxygen Refilling</th><td>${location.hasRefilling ? \"Yes\" : \"No\" }</td></tr>\r\n          <tr><th>Oxygen Cylinders</th><td>${location.hasCylinders ? \"Yes\" : \"No\" }</td></tr>\r\n          <tr><th>Oxygen Cans</th><td>${location.hasCans ? \"Yes\" : \"No\" }</td></tr>\r\n          <tr><th>Oxygen Concentrator</th><td>${location.hasConcentrator ? \"Yes\" : \"No\" }</td></tr>\r\n        </table>\r\n        <p>\r\n        <strong>\r\n          Additional info:\r\n        </strong>\r\n        ${location.additionalInfo}\r\n        </p>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  setMap(map) {\r\n    this.marker.setMap(map);\r\n  }\r\n}\r\n\r\nexport default OxygenSupplyMarker;\r\n","import City from '../city'\r\nimport CowinMap from '../cowinMap'\r\n\r\nfunction initialiseMap() {\r\n  let cowinMap = new CowinMap();\r\n\r\n  let afterCityDataFetchCallback = (cowinMapMarkers) => {\r\n    cowinMapMarkers.forEach((cowinMapMarker) => {\r\n      cowinMap.setupAndPlotCowinMapMarker(cowinMapMarker);\r\n    });\r\n    cowinMap.plotAllCowinMapMarkers();\r\n  };\r\n\r\n  let coimbatorCity = new City(\r\n    \"coimbatore\",\r\n    {\r\n      covidBeds: \"1WW1Lu7S8zP85Qzv-Pn7gp_KUxPJZzvrXnGoWOkwcdbw\",\r\n      oxygenSupply: \"1Ry3y1hx1iHeuF17YmWtzfaDQdhx5zRr6lSLrzBW_TU0\"\r\n    },\r\n    afterCityDataFetchCallback\r\n  );\r\n\r\n  let tiripurCity = new City(\r\n    \"tirupur\",\r\n    {\r\n      covidBeds: \"1T5fUP5nhCctC2bpNWeO4Yg2UYrewbTxrGh58c2zJePU\"\r\n    },\r\n    afterCityDataFetchCallback\r\n  );\r\n\r\n  let maduraiCity = new City(\r\n    \"Madurai\",\r\n    {\r\n      covidBeds: \"1Dr7DYS6GKe5avhHcwhHMB6Z9DTFSj20eEgLvfBlQJSo\"\r\n    },\r\n    afterCityDataFetchCallback\r\n  );\r\n\r\n  let chennaiCity = new City(\r\n    \"Chennai\",\r\n    {\r\n      covidBeds: \"1YV3DWGxsvlTp0-vaw8f09AajQ5cl3MovFvWVVDtkbOc\"\r\n    },\r\n    afterCityDataFetchCallback\r\n  );\r\n\r\n  let salemCity = new City(\r\n    \"Salem\",\r\n    {\r\n      covidBeds: \"1GlNu4jyK_nkI2KwEBe9Wc6qgW1bCxbrH9v8cUJDJWrs\"\r\n    },\r\n    afterCityDataFetchCallback\r\n  );\r\n}\r\n\r\nwindow.initialiseMap = initialiseMap;\r\n","import MapFilters from './mapFilters';\r\n\r\nclass CowinMap {\r\n  constructor() {\r\n    this.map = null;\r\n    this.initialiseMap();\r\n    this.markerInfoWindow = new google.maps.InfoWindow({ content: \"\" });\r\n    this.cowinMapMarkers = [];\r\n    this.bounds = new google.maps.LatLngBounds();\r\n    this.mapFilters = new MapFilters((newFiltersState) => {\r\n      this.plotAllCowinMapMarkers();\r\n    });\r\n  }\r\n\r\n  initialiseMap() {\r\n    // Center on (0, 0). Map center and zoom will reconfigure later (fitbounds method)\r\n    this.map = new google.maps.Map(document.getElementById('map'), {\r\n      zoom: 10,\r\n      center: new google.maps.LatLng(0, 0)\r\n    });\r\n  }\r\n\r\n  setupAndPlotCowinMapMarker(cowinMapMarker) {\r\n    google.maps.event.addListener(cowinMapMarker.marker, 'click', () => {\r\n      this.markerInfoWindow.setContent(cowinMapMarker.descriptionHtml);\r\n      this.markerInfoWindow.open(this.map, cowinMapMarker.marker);\r\n    });\r\n    this.cowinMapMarkers.push(cowinMapMarker);\r\n  };\r\n\r\n  plotCowinMapMarker(cowinMapMarker) {\r\n    if (this.mapFilters.shouldShowLocation(cowinMapMarker.location)) {\r\n      cowinMapMarker.setMap(this.map);\r\n      if (!isNaN(cowinMapMarker.location.latitude) && !isNaN(cowinMapMarker.location.longitude)) {\r\n        this.bounds.extend(cowinMapMarker.position);\r\n      }\r\n    } else {\r\n      cowinMapMarker.setMap(null);\r\n    }\r\n  }\r\n\r\n  plotAllCowinMapMarkers() {\r\n    this.cowinMapMarkers.forEach((cowinMapMarker) => {\r\n      this.plotCowinMapMarker(cowinMapMarker);\r\n    });\r\n\r\n    this.map.fitBounds(this.bounds);\r\n  }\r\n}\r\n\r\nexport default CowinMap;\r\n","class MapFilters {\r\n  constructor(onChangeCallback) {\r\n    this.state = {\r\n      shouldHaveCovidBeds: false,\r\n      shouldHaveOxygenBeds: false,\r\n      shouldHaveICUs: false,\r\n      shouldHaveVentilators: false\r\n    };\r\n    this.setEventListeners();\r\n    this.onChangeCallback = onChangeCallback;\r\n  }\r\n\r\n  setEventListeners() {\r\n    let that = this;\r\n    document.querySelectorAll(\".filters_form input\").forEach(function(filter_chkbx) {\r\n      filter_chkbx.addEventListener(\"change\", (event) => { that.filterChanged(event.target) });\r\n    });\r\n  }\r\n\r\n  filterChanged(checkedCheckboxElem) {\r\n    let filterName = checkedCheckboxElem.dataset.filterName;\r\n    if (filterName == \"show_covid_beds\")  {\r\n      this.state.shouldHaveCovidBeds = checkedCheckboxElem.checked;\r\n    } else if (filterName == \"show_oxygen_beds\")  {\r\n      this.state.shouldHaveOxygenBeds = checkedCheckboxElem.checked;\r\n    } else if (filterName == \"show_icus\")  {\r\n      this.state.shouldHaveICUs = checkedCheckboxElem.checked;\r\n    } else if (filterName == \"show_ventilators\")  {\r\n      this.state.shouldHaveVentilators = checkedCheckboxElem.checked;\r\n    }\r\n\r\n    this.onChangeCallback(this.state);\r\n  }\r\n\r\n  shouldShowLocation(location) {\r\n    if ((this.state.shouldHaveCovidBeds && !location.hasCovidBeds) ||\r\n      (this.state.shouldHaveOxygenBeds && !location.hasOxygenBeds) ||\r\n      (this.state.shouldHaveICUs && !location.hasICUs) ||\r\n      (this.state.shouldHaveVentilators && !location.hasVentilators)) {\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default MapFilters;\r\n"],"sourceRoot":""}